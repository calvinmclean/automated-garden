apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: config
              mountPath: /etc/grafana/provisioning/datasources
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                configMapKeyRef:
                  name: shared-environment
                  key: ADMIN_USER
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: shared-environment
                  key: ADMIN_PSWD
            - name: GF_PATHS_PROVISIONING
              valueFrom:
                configMapKeyRef:
                  name: shared-environment
                  key: GF_PATHS_PROVISIONING
            - name: INFLUXDB_TOKEN
              valueFrom:
                configMapKeyRef:
                  name: shared-environment
                  key: INFLUXDB_TOKEN
            - name: INFLUXDB_ORG
              valueFrom:
                configMapKeyRef:
                  name: shared-environment
                  key: INFLUXDB_ORG
            - name: INFLUXDB_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: shared-environment
                  key: INFLUXDB_BUCKET
      volumes:
        - name: config
          configMap:
            name: grafana-config
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: default
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30003
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: default
data:
  datasource.yml: |
    apiVersion: 1
    datasources:
      - name: InfluxDB
        type: influxdb
        access: proxy
        url: http://influxdb:8086
        secureJsonData:
          token: ${INFLUXDB_TOKEN}
        jsonData:
          version: Flux
          organization: ${INFLUXDB_ORG}
          defaultBucket: ${INFLUXDB_BUCKET}
          tlsSkipVerify: true
