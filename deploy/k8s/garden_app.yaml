apiVersion: apps/v1
kind: Deployment
metadata:
  name: garden-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: garden-app
  template:
    metadata:
      labels:
        app: garden-app
    spec:
      containers:
        - name: garden-app
          image: ghcr.io/calvinmclean/garden-app
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          volumeMounts:
            - name: config
              mountPath: /config
          args:
            - server
            - --config
            - /config/config.yaml
      volumes:
        - name: config
          configMap:
            name: garden-app-config
---
apiVersion: v1
kind: Service
metadata:
  name: garden-app
spec:
  type: NodePort
  selector:
    app: garden-app
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30001
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: garden-app-config
data:
  config.yaml: |
    web_server:
      port: 80
    mqtt:
      broker: "mosquitto"
      port: 1883
      client_id: "garden-app"
      water_topic: "{{.Garden}}/command/water"
      stop_topic: "{{.Garden}}/command/stop"
      stop_all_topic: "{{.Garden}}/command/stop_all"
      light_topic: "{{.Garden}}/command/light"
    influxdb:
      address: "http://influxdb:8086"
      token: "my-secret-token"
      org: "garden"
      bucket: "garden"
    storage:
      type: "ConfigMap"
      options:
        name: "garden-app-config"
        key: "gardens.yaml"
  gardens.yaml: |
    c9i98glvqc7km2vasfig:
        name: Garden
        topic_prefix: garden
        id: c9i98glvqc7km2vasfig
        zones:
            c9i99otvqc7kmt8hjio0:
                name: Zone 1
                id: c9i99otvqc7kmt8hjio0
                position: 0
                created_at: 2022-04-23T17:08:03.441727-07:00
                water_schedule:
                    duration: 30s
                    interval: 24h
                    start_time: 2022-04-23T08:00:00-07:00
        max_zones: 1
        created_at: 2022-04-23T17:05:22.245112-07:00
        light_schedule:
            duration: 14h
            start_time: 08:00:00-07:00

# in order to read/write the ConfigMap from the pod, you need to create a ClusterRoleBinding:
# kubectl create clusterrolebinding default --clusterrole=admin --serviceaccount=default:default
