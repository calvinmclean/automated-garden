name: CI

on:
  push:
    branches-ignore: ["assets"]

env:
  REGISTRY: ghcr.io
  PROJECT_NAME: garden-app

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.19
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: ./${{ env.PROJECT_NAME }}

  unit_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19

      - name: Test
        working-directory: ./${{ env.PROJECT_NAME }}
        run: go test -short -race -covermode=atomic -coverprofile=coverage.out -coverpkg=./... ./...

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          functionalities: "fixes"

  integration_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19

      - name: Start containers for integration test
        working-directory: ./deploy
        run: docker compose --profile test up -d

      - name: Integration Test
        working-directory: ./${{ env.PROJECT_NAME }}
        run: sleep 15 && go test -race -covermode=atomic -coverprofile=integration_coverage.out -coverpkg=./... ./integration_tests

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          functionalities: "fixes"

      - name: Remove containers for integration test
        working-directory: ./deploy
        run: docker compose --profile test down

  build:
    needs: ["unit_test", "integration_test"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.PROJECT_NAME }}
          flavor: |
            latest=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./${{ env.PROJECT_NAME }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
